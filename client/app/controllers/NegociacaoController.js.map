{"version":3,"sources":["../../app-src/controllers/NegociacaoController.js"],"names":["Negociacoes","NegociacaoService","Negociacao","NegociacoesView","MensagemView","Mensagem","DataInvalidaException","DateConverter","getNegociacaoDao","Bind","NegociacaoController","constructor","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_negociacoes","_mensagem","_service","_init","then","dao","listaTodos","negociacoes","forEach","negociacao","adiciona","catch","err","texto","event","preventDefault","_criaNegociacao","_limpaFormulario","console","log","stack","message","apaga","apagaTodos","esvazia","importa","obtemNegociacoesNoPeriodo","filter","novaNegociacao","some","negociacaoExistente","equals","value","focus","textoParaData","parseInt","parseFloat"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import { Negociacoes, NegociacaoService, Negociacao } from '../domain/index.js';\nimport { NegociacoesView, MensagemView, Mensagem, DataInvalidaException, DateConverter } from '../ui/index.js';\nimport { getNegociacaoDao, Bind } from '../util/index.js';\n\nexport class NegociacaoController {\n\n    constructor() {\n        // toda funcao em JS possui o metodo bind(). Realizando o bind, o $ mantém document como seu contexto this\n        const $ = document.querySelector.bind(document);\n        this._inputData = $('#data');\n        this._inputQuantidade = $('#quantidade');\n        this._inputValor = $('#valor');\n        this._negociacoes = new Bind(\n            new Negociacoes(),\n            new NegociacoesView('#negociacoes'),\n            'adiciona', 'esvazia'\n        );\n        this._mensagem = new Bind(\n            new Mensagem(),\n            new MensagemView('#mensagem'),\n            'texto'\n        );\n        this._service = new NegociacaoService();\n        this._init();\n    }\n\n    _init() {\n        // inicializa a tabela com todas as negociacoes que estao no banco\n        getNegociacaoDao()\n            .then(dao => dao.listaTodos())\n            .then(negociacoes => negociacoes.forEach(negociacao => this._negociacoes.adiciona(negociacao)))\n            .catch(err => this._mensagem.texto = err);\n    }\n\n    adiciona(event) {\n        try {\n            event.preventDefault();\n            const negociacao = this._criaNegociacao();\n\n            getNegociacaoDao()\n            .then(dao => dao.adiciona(negociacao))\n            .then(() => {\n                // apenas inclui na tabela se conseguiu incluir no banco\n                this._negociacoes.adiciona(this._criaNegociacao());\n                this._mensagem.texto = 'Negociação adicionada com sucesso.';\n                this._limpaFormulario();\n            })\n            .catch(err => this._mensagem.texto = err);\n        } catch(err) {\n            console.log(err);\n            console.log(err.stack);\n\n            if(err instanceof DataInvalidaException) this._mensagem.texto = err.message;\n            else this._mensagem.texto = 'Um erro não esperado aconteceu. Entre em contato com o suporte.';\n        }\n    }\n\n    apaga() {\n        getNegociacaoDao()\n        .then(dao => dao.apagaTodos())\n        .then(() => {\n            this._negociacoes.esvazia();\n            this._mensagem.texto = 'Negociações apagadas com sucesso.';\n        })\n        .catch(err => this._mensagem.texto = err);\n    }\n\n    importa() {\n        this._service.obtemNegociacoesNoPeriodo()\n        .then(negociacoes => {\n            negociacoes.filter(novaNegociacao => { \n                return !this._negociacoes.negociacoes.some(negociacaoExistente => novaNegociacao.equals(negociacaoExistente))\n            })\n            .forEach(negociacao => {\n                getNegociacaoDao()\n                .then(dao => dao.adiciona(negociacao))\n                .then(() => {\n                    this._negociacoes.adiciona(negociacao);\n                    this._mensagem.texto = 'Negociações do período importadas com sucesso.';\n                })\n                .catch(err => this._mensagem.texto = err);\n            });\n            \n        })\n        .catch(err => this._mensagem.texto = err);\n    }\n\n    _limpaFormulario() {\n        this._inputValor.value = 0.0;\n        this._inputQuantidade.value = 1;\n        this._inputData.value = '';\n        this._inputData.focus();\n    }\n\n    _criaNegociacao() {\n        return new Negociacao(\n            DateConverter.textoParaData(this._inputData.value), \n            parseInt(this._inputQuantidade.value), \n            parseFloat(this._inputValor.value)\n        );\n    }\n    \n}"]}